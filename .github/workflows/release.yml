# yaml-language-server: $schema=https://json-schema.org/draft-07/schema#
name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release-github-packages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Release
        run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm

      - name: Get Version ID
        id: get-version-id
        run: |
          VERSION_ID=$(cat package.json | grep version | sed 's|  \"version\": \"||g' | sed 's|\",||g')
          echo "::set-output name=version-id::$(echo $VERSION_ID)"
          echo $VERSION_ID

      - name: Install Node dependencies
        run: |
          pnpm i

      - name: Build
        run: |
          pnpm build

      - name: Minify HTML Index
        uses: Dup4/minify-html-action@v1
        with:
          src: "./packages/apps/board/dist/index.html"

      - name: Enable 404.html
        run: |
          cp ./packages/apps/board/dist/index.html ./packages/apps/board/dist/404.html

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push packages/app
        uses: docker/build-push-action@v4
        env:
          image_name: "board-app"
          tag: ${{ steps.get-version-id.outputs.version-id }}
        with:
          context: ./packages/apps/board/
          file: ./packages/apps/board/docker/Dockerfile.release
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            xcpcio/${{ env.image_name }}:latest
            xcpcio/${{ env.image_name }}:${{ env.tag }}
            ghcr.io/xcpcio/${{ env.image_name }}:latest
            ghcr.io/xcpcio/${{ env.image_name }}:${{ env.tag }}
